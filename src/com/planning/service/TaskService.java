/*Generado por Disrupsoft*/
package com.planning.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import com.planning.entity.*;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.EntityGraph;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Date;
import java.util.List;

/**
 * Service object for domain model class Task.
 *
 * @see Task
 */
public interface TaskService extends JpaRepository<Task, Integer> {
    
    @Override
    @EntityGraph(value = "Task.criticalyLevels")
    public List<Task> findAll();
    
    @Override
    @EntityGraph(value = "Task.criticalyLevels")
    Task findOne(Integer integer);
    
    public List<Task> findByFechaCreacionBetween(Date fechaInicio, Date fechaFin);
    
    public Page<Task> findByFechaCreacionBetween(Date fechaInicio, Date fechaFin, Pageable p);
    
    public Page<Task> findByFechaCreacionBetweenAndPosition(Date fechaInicio, Date fechaFin, Position position, Pageable p);
    
    public List<Task> findByIdNotIn(List<Integer> ids);
    
    public List<Task> findByPosition(Position position);
    
    public Page<Task> findByPosition(Position position, Pageable pageable);
    
    public List<Task> findByPosition_Area(Area area);
    
    public Page<Task> findByPosition_Area(Area area, Pageable pageable);
    
    public List<Task> findByPosition_Area_Management(Management management);
    
    public Page<Task> findByPosition_Area_Management(Management management, Pageable pageable);
    
    public List<Task> findByCriticalyLevelsContains(CriticalyLevel criticalyLevel);
    
    public Page<Task> findByCriticalyLevelsContains(CriticalyLevel criticalyLevel, Pageable pageable);
    
    public List<Task> findByCriticalyLevelsContainsAndPosition(CriticalyLevel criticalyLevel, Position position);
}
